from typing import Dict, Literal, Optional, Union, List
from pydantic import BaseModel, Field

formatters_types_description: str = f"""The formatter type of this field.
'Semperis.ReportTemplates.DataSource.DB.ADSyntaxFormatter, Semperis.ReportTemplates.DataSource.DB' for From_Syntax, To_Syntax ,
'Semperis.ReportTemplates.DataSource.DB.DBDateTimeFormatter, Semperis.ReportTemplates.DataSource.DB' for CollectionTime, OriginatingTime, Valid Until, ValidUntil,
'Semperis.ReportTemplates.DataSource.Data.DefaultFormatter, Semperis.ReportTemplates.DataSource.Data' for all other fields"""

formatters_names_description: str = """The formatter anme of this field.
'ADSyntax Formatting' for From_Syntax, To_Syntax ,
'Universal sortable date/time pattern' for CollectionTime, OriginatingTime, Valid Until, ValidUntil,
'No Formatting' for all other fields"""

class DNSSelectedFormatterSchema(BaseModel):
    DollarType: Literal[
        'Semperis.ReportTemplates.DataSource.DB.ADSyntaxFormatter, Semperis.ReportTemplates.DataSource.DB',
        'Semperis.ReportTemplates.DataSource.DB.DBDateTimeFormatter, Semperis.ReportTemplates.DataSource.DB',
        'Semperis.ReportTemplates.DataSource.Data.DefaultFormatter, Semperis.ReportTemplates.DataSource.Data'
    ] = Field(description=formatters_types_description)
    
    Name: Literal[
        'ADSyntax Formatting',
        'Universal sortable date/time pattern',
        'No Formatting'] = Field(description=formatters_names_description)

dns_fields_description: str = """The display fields in this DNS reports. Fields explanation:
To_Name (New DNS record name),
To_RecordType (DNS record type after change),
To_Serial (New DNS serial number),
To_TextualForm (New DNS value in text),
To_TimeStamp (Timestamp of new record),
To_TtlSeconds (New TTL),
To_TypeA_IPAddress (New A record IP),
To_TypeHInfoIsdnTxtX25Loc_StringData (Other string data for record types),
To_TypeMInfoRp_ErrorMailbox (MINFO error mailbox),
To_TypeMInfoRp_Mailbox (MINFO mailbox),
To_TypeMxAFSDBRt_NameExchange (MX/AFSDB exchange name),
To_TypeMxAFSDBRt_Preference (MX preference),
To_TypeName_Name (Record type name),
To_TypeSoa_Expire (SOA expire value),
To_TypeSoa_MinTtl (SOA minimum TTL),
To_TypeSoa_PrimaryServer (SOA primary server),
To_TypeSoa_Refresh (SOA refresh interval),
To_TypeSoa_Retry (SOA retry interval),
To_TypeSoa_ZoneAdministrator (SOA admin email),
To_TypeSrv_Host (SRV host),
To_TypeSrv_Port (SRV port),
To_TypeSrv_Priority (SRV priority),
To_TypeSrv_Weight (SRV weight),
To_TypeWks_Bitmask (WKS services bitmask),
To_TypeWks_IPAddress (WKS IP address),
To_TypeWks_Protocol (WKS protocol),
To_ZoneName (New DNS zone name),
From_BinaryCheckSum (Checksum of previous binary data),
From_CheckSum (General checksum of previous value),
From_Flags (Flags on the previous record),
From_HasData (Whether previous record had data),
From_RawBytesBase64 (Previous raw bytes Base64 encoded),
From_Name (Previous DNS record name),
From_Record_Type (DNS record type before change),
From_Serial (Previous DNS serial number),
From_TextualForm (Previous DNS value in text),
From_TimeStamp (Timestamp of previous record),
From_TtlSeconds (Time to live in seconds),
From_TypeA_IPAddress (Previous A record IP),
From_TypeHInfoIsdnTxtX25Loc_StringData (Other string data for record types),
From_TypeMInfoRp_ErrorMailbox (MINFO record error mailbox),
From_TypeMInfoRp_Mailbox (MINFO record mailbox),
From_TypeMxAFSDBRt_NameExchange (MX/AFSDB exchange name),
From_TypeMxAFSDBRt_Preference (MX preference),
From_TypeName_Name (Record type name),
From_TypeSoa_Expire (SOA expire value),
From_TypeSoa_MinTtl (SOA minimum TTL),
From_TypeSoa_PrimaryServer (SOA primary server),
From_TypeSoa_Refresh (SOA refresh interval),
From_TypeSoa_Retry (SOA retry interval),
From_TypeSoa_ZoneAdministrator (SOA admin email),
From_TypeSrv_Host (SRV host),
From_TypeSrv_Port (SRV port),
From_TypeSrv_Priority (SRV priority),
From_TypeSrv_Weight (SRV weight),
From_TypeWks_Bitmask (WKS services bitmask),
From_TypeWks_IPAddress (WKS IP address),
From_TypeWks_Protocol (WKS protocol),
From_ZoneName (Previous DNS zone name),
To_BinaryCheckSum (Checksum of new binary data),
To_CheckSum (General checksum of new value),
To_Flags (Flags on new record),
To_HasData (Whether new record has data),
To_RawBytesBase64 (New raw bytes Base64 encoded),
ClassName (Object class (eg, user, group, computer)),
DisplayName (User-friendly display name),
Distinguished Name (Full LDAP path identifying the object),
Object Guid (Unique GUID of the object),
SamAccountName (Pre-Windows 2000 logon name),
UPN (User Principal Name (user@domain)),
Version (Version of the record),
CollectionTime (When the data was collected),
ForestGenerationId (ID representing the forest replication generation),
Row Number (Row number in the report),
UserMatchCount (How many users matched this record),
ValidUntil (When this data expires) <-- Formatter is "Universal sortable date/time pattern",
DirSyncOperationType (Type of directory sync operation (add, modify, delete)),
ModificationType (Type of change (add, modify, delete)),
OriginatingServer (DC that made the change),
OriginatingTime (Time the change originated) <-- Formatter is "Universal sortable date/time pattern",
OriginatingUsers (User(s) who triggered the change),
OriginatingUserWorkstations (Workstations where change originated),
IsActionable (Whether this row requires action),
IsFirst (Whether this is the first change in a sequence),
IsLast (Whether this is the last change in a sequence),
IsPassword (Whether the change was to a password),
IsVirtual (Whether this is a virtual object),"""

class DNSResultColumnSchema(BaseModel):
    Name: Literal[
        "To_Name",
        "To_RecordType",
        "To_Serial",
        "To_TextualForm",
        "To_TimeStamp",
        "To_TtlSeconds",
        "To_TypeA_IPAddress",
        "To_TypeHInfoIsdnTxtX25Loc_StringData",
        "To_TypeMInfoRp_ErrorMailbox",
        "To_TypeMInfoRp_Mailbox",
        "To_TypeMxAFSDBRt_NameExchange",
        "To_TypeMxAFSDBRt_Preference",
        "To_TypeName_Name",
        "To_TypeSoa_Expire",
        "To_TypeSoa_MinTtl",
        "To_TypeSoa_PrimaryServer",
        "To_TypeSoa_Refresh",
        "To_TypeSoa_Retry",
        "To_TypeSoa_ZoneAdministrator",
        "To_TypeSrv_Host",
        "To_TypeSrv_Port",
        "To_TypeSrv_Priority",
        "To_TypeSrv_Weight",
        "To_TypeWks_Bitmask",
        "To_TypeWks_IPAddress",
        "To_TypeWks_Protocol",
        "To_ZoneName",
        "From_BinaryCheckSum",
        "From_CheckSum",
        "From_Flags",
        "From_HasData",
        "From_RawBytesBase64",
        "From_Name",
        "From_Record_Type",
        "From_Serial",
        "From_TextualForm",
        "From_TimeStamp",
        "From_TtlSeconds",
        "From_TypeA_IPAddress",
        "From_TypeHInfoIsdnTxtX25Loc_StringData",
        "From_TypeMInfoRp_ErrorMailbox",
        "From_TypeMInfoRp_Mailbox",
        "From_TypeMxAFSDBRt_NameExchange",
        "From_TypeMxAFSDBRt_Preference",
        "From_TypeName_Name",
        "From_TypeSoa_Expire",
        "From_TypeSoa_MinTtl",
        "From_TypeSoa_PrimaryServer",
        "From_TypeSoa_Refresh",
        "From_TypeSoa_Retry",
        "From_TypeSoa_ZoneAdministrator",
        "From_TypeSrv_Host",
        "From_TypeSrv_Port",
        "From_TypeSrv_Priority",
        "From_TypeSrv_Weight",
        "From_TypeWks_Bitmask",
        "From_TypeWks_IPAddress",
        "From_TypeWks_Protocol",
        "From_ZoneName",
        "To_BinaryCheckSum",
        "To_CheckSum",
        "To_Flags",
        "To_HasData",
        "To_RawBytesBase64",
        "ClassName",
        "DisplayName",
        "Distinguished Name",
        "Object Guid",
        "SamAccountName",
        "UPN",
        "Version",
        "CollectionTime",
        "ForestGenerationId",
        "Row Number",
        "UserMatchCount",
        "ValidUntil",
        "DirSyncOperationType",
        "ModificationType",
        "OriginatingServer",
        "OriginatingTime",
        "OriginatingUsers",
        "OriginatingUserWorkstations",
        "IsActionable",
        "IsFirst",
        "IsLast",
        "IsPassword",
        "IsVirtual"]                              = Field(description=dns_fields_description)
    # TODO post processing- this is "$type"
    SelectedFormatter: DNSSelectedFormatterSchema = Field(description="The formatter to use for this display column")
    DollarType       : str                        = "Semperis.ReportTemplates.DataSource.DB.DBDataColumn, Semperis.ReportTemplates.DataSource.DB"
    Alias            : Optional[str]              = Field(default=None, description="An alias the user wants to assign to this display column instead of the attribute's real name")